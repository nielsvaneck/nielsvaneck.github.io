<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>npm on niels van eck</title><link>https://nielsvaneck.com/tags/npm/</link><description>Recent content in npm on niels van eck</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 18 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://nielsvaneck.com/tags/npm/index.xml" rel="self" type="application/rss+xml"/><item><title>Automating npm install</title><link>https://nielsvaneck.com/post/2021-05-18-automating-npm-install/</link><pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate><guid>https://nielsvaneck.com/post/2021-05-18-automating-npm-install/</guid><description>I&amp;rsquo;ve previously written about using Make as a command interface for your repository and the other day, I ran into a situation where using Makefiles takes away a real-life annoyance for teams working on NodeJS and other Javascript or TypeScript based projects.
When growing teams work in repositories that use NPM for Yarn for package management, dependency updates will enter the local workspace frequently when the main branch is pulled. Unless you&amp;rsquo;re religious about running npm install after every git pull, updating local dependencies of often omitted and sometimes leads to confusing red herring bugs or in the very least, lost time.</description></item></channel></rss>
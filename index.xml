<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>niels van eck</title><link>https://nielsvaneck.com/</link><description>Recent content on niels van eck</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 09 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://nielsvaneck.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Bye, Wordpress!</title><link>https://nielsvaneck.com/post/2021-01-09-bye-wordpress/</link><pubDate>Sat, 09 Jan 2021 00:00:00 +0000</pubDate><guid>https://nielsvaneck.com/post/2021-01-09-bye-wordpress/</guid><description>Last summer, frustrated over the loss of my personal domain, I bought a cute url and set up a Wordpress blog with the intention of sharing some content about what I was working on. Our son was born around the same time and so the site sat idle for a few months, but when I picked up writing back in November, the experience with Wordpress irked me. Wordpress is a fine CMS, it is great for getting a quick blog up and going, but I wanted more control over my content.</description></item><item><title>“Make” as a command interface to your repository</title><link>https://nielsvaneck.com/post/2020-11-21-make-as-a-command-interface-to-your-repository/</link><pubDate>Sat, 21 Nov 2020 00:00:00 +0000</pubDate><guid>https://nielsvaneck.com/post/2020-11-21-make-as-a-command-interface-to-your-repository/</guid><description>Back in 1976, when Make first entered the scene, it solved the problem of automating dependency aware software builds. By defining what sources a build target operates on, it could automatically determine what should be compiled based on what files had changed, thus saving on computing time while guaranteeing correct builds.
Command vs Automatic Targets The ability to define build targets that could be invoked from the command line as make arguments, quickly lead to Make being used for other tasks than just building software, think of make install for example.</description></item><item><title>Cover Story</title><link>https://nielsvaneck.com/post/2020-11-14-cover-story/</link><pubDate>Sat, 14 Nov 2020 00:00:00 +0000</pubDate><guid>https://nielsvaneck.com/post/2020-11-14-cover-story/</guid><description>One of the emails I&amp;rsquo;m willingly subscribed to and really look forward to every week, is a newsletter for subscribers of The Economist that tells the story of the week&amp;rsquo;s cover choice. While guaranteed to–excuse the pun–cover the news, the newsletter is an always interesting distraction from current events.
In a few paragraphs, accompanied with sketches and more polished candidates that did not make the final cut, the email describes the creative and journalistic process that lead to that week&amp;rsquo;s magazine newspaper cover image.</description></item><item><title>Test-object builders for Stripe API resources</title><link>https://nielsvaneck.com/post/2020-11-12-test-object-builders-for-stripe-api-resources/</link><pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate><guid>https://nielsvaneck.com/post/2020-11-12-test-object-builders-for-stripe-api-resources/</guid><description>Working with the Stripe API is unlike most anything else in the world of software development. Stripe&amp;rsquo;s documentation is outstanding. Their API is intuitive and the language specific clients are easy to use. Each Stripe account comes with a test environment that makes development and integration testing effortless. The stripe command line tool can be used for simple API queries, setting up authentication and testing of web hooks. On top of all that, there is stripe-mock, a local service with a near- complete implementation of the API that can be used for testing and development without requiring a network connection to the Stripe Test environment.</description></item><item><title>GCloud Dataproc image upgrades &amp; Zeppelin Notebooks</title><link>https://nielsvaneck.com/post/2020-11-10-gcloud-dataproc-image-upgrades-zeppelin-notebooks/</link><pubDate>Tue, 10 Nov 2020 00:00:00 +0000</pubDate><guid>https://nielsvaneck.com/post/2020-11-10-gcloud-dataproc-image-upgrades-zeppelin-notebooks/</guid><description>A Dataproc cluster with the Zeppelin Notebooks component enabled is a great tool for exposing a quick collaboration-, query and insight interface to data-stores in the Google Cloud Platform (GCP).
It is easy to set up. In just a few clicks, gcloud commands or lines of Terraform configuration, you can access the Zeppelin UI and start creating Notebooks. A Google Cloud Storage (GCS) bucket is used to store the notebooks, which means that after re-creating the cluster for software or hardware changes, you can pick up where you left off.</description></item><item><title>Testing Python with Mockito</title><link>https://nielsvaneck.com/post/2020-11-10-testing-python-with-mockito/</link><pubDate>Tue, 10 Nov 2020 00:00:00 +0000</pubDate><guid>https://nielsvaneck.com/post/2020-11-10-testing-python-with-mockito/</guid><description>A significant percentage of writing software is invoking other bits of software that may or may not be in your control. That sounds straightforward, after all most of this code doesn&amp;rsquo;t even really &amp;ldquo;do&amp;rdquo; anything. But as with most things in life, mistakes are made and thus small bugs find their way into your code.
Testing is the obvious answer to this problem. Now before you climb your high horse and start pouring out the bucket of arguments on how good coders don&amp;rsquo;t need to write tests–and definitely not for simple code–, how testing takes too much time, that your boss won&amp;rsquo;t let you- or whatever other bad excuse (copied-from-some-Quora-answer-you-may-or-may-not-have-found-on-Google) you can bring up; here is why I think unit testing is valuable:</description></item><item><title>About</title><link>https://nielsvaneck.com/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nielsvaneck.com/about/</guid><description>Hi! I&amp;rsquo;m Niels, Fresh dad, YouTube polymath, man of owls, sand exciter, enjoyer of domestic tinkering and other adventures. Welcome to my personal corner of the Internet!</description></item></channel></rss>